@model DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";

}

<style>
    .table-scroll-container {
        max-height: 400px; /* Adjust based on how many rows you want visible */
        overflow-y: auto; /* Enable vertical scrolling */
        display: block;
    }

        /* Optional: Improve appearance of scrollbar (WebKit browsers only) */
        .table-scroll-container::-webkit-scrollbar {
            width: 8px;
        }

        .table-scroll-container::-webkit-scrollbar-thumb {
            background-color: rgba(0, 0, 0, 0.2);
            border-radius: 4px;
        }

        .table-scroll-container thead th {
            position: sticky;
            top: 0;
            background-color: white;
            box-shadow: 0 2px 2px -1px rgba(0,0,0,0.1);
            z-index: 10;
        }

    .sortable-header {
        cursor: pointer;
        position: relative;
        padding-right: 20px;
    }

        .sortable-header .sort-icon {
            position: absolute;
            right: 5px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 12px;
            color: #999;
        }

        .sortable-header.asc .sort-icon::after {
            content: "▲";
            color: black;
        }

        .sortable-header.desc .sort-icon::after {
            content: "▼";
            color: black;
        }

    .dragging {
        opacity: 0.8;
    }
</style>

<!-- jsPDF -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

<!-- html2canvas (for screenshot conversion) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- colResizable (for column resizing) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.colresizable/1.6.2/colResizable-1.6.min.js"></script>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<!-- ChartJS -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@*Template*@
<div class="container">
    <div class="page-inner">
        <div class="row mt-3 mb-3">
            <div class="col-md-3">
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate" class="form-control" />
            </div>
            <div class="col-md-3">
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate" class="form-control" />
            </div>
            <div class="col-md-3">
                <label for="statusFilter">Filter by Bin Status:</label>
                <select id="statusFilter" class="form-control">
                    <option value="">All</option>
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button class="btn btn-danger w-100" onclick="generateFullPDFReport()">
                    <i class="fas fa-file-pdf"></i> Generate Full Report (PDF)
                </button>
            </div>
        </div>
            <hr />
        
        <div class="row">
            <div class="col-sm-6 col-md-3">
                <div class="card card-stats card-round">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-icon">
                                <div class="icon-big text-center icon-primary bubble-shadow-small">
                                    <i class="fas fa-trash"></i>
                                </div>
                            </div>
                            <div class="col col-stats ms-3 ms-sm-0">
                                <div class="numbers">
                                    <p class="card-category">Total Bins</p>
                                    <h4 class="card-title">@Model.TotalBins</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="card card-stats card-round">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-icon">
                                <div class="icon-big text-center icon-info bubble-shadow-small">
                                    <i class="fas fa-truck"></i>
                                </div>
                            </div>
                            <div class="col col-stats ms-3 ms-sm-0">
                                <div class="numbers">
                                    <p class="card-category">Total Trucks</p>
                                    <h4 class="card-title">@Model.TotalTrucks</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="card card-stats card-round">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-icon">
                                <div class="icon-big text-center icon-warning bubble-shadow-small">
                                    <i class="fas fa-wrench"></i>
                                </div>
                            </div>
                            <div class="col col-stats ms-3 ms-sm-0">
                                <div class="numbers">
                                    <p class="card-category">Trucks in Maintenance</p>
                                    <h4 class="card-title">@Model.TrucksUnderMaintenance</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="card card-stats card-round">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-icon">
                                <div class="icon-big text-center icon-secondary bubble-shadow-small">
                                    <i class="far fa-check-circle"></i>
                                </div>
                            </div>
                            <div class="col col-stats ms-3 ms-sm-0">
                                <div class="numbers">
                                    <p class="card-category">Trucks Assigned Today</p>
                                    <h4 class="card-title">@Model.TrucksAssignedToday</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <div class="card card-round">
                    <div class="card-header">
                        <div class="card-head-row">
                            <div class="card-title">User Statistics</div>
                            <div class="card-tools">
                                <a href="#"
                                   class="btn btn-label-success btn-round btn-sm me-2">
                                    <span class="btn-label">
                                        <i class="fa fa-pencil"></i>
                                    </span>
                                    Export
                                </a>
                                <a href="#" class="btn btn-label-info btn-round btn-sm">
                                    <span class="btn-label">
                                        <i class="fa fa-print"></i>
                                    </span>
                                    Print
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart-container" style="min-height: 375px">
                            <canvas id="statisticsChart"></canvas>
                        </div>
                        <!-- Hidden container for PDF export -->
                        <div id="chartContainer" style="width: 600px; height: 300px; display: none;"></div>
                        <div id="myChartLegend"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
    <div class="card card-primary card-round">
        <div class="card-header">
            <div class="card-head-row">
                <div class="card-title">Daily Pickups</div>
                <div class="card-tools">
                    <div class="dropdown">
                        <button class="btn btn-sm btn-label-light dropdown-toggle"
                                type="button"
                                id="dropdownMenuButtonPickup"
                                data-bs-toggle="dropdown"
                                aria-haspopup="true"
                                aria-expanded="false">
                            Export
                        </button>
                        <div class="dropdown-menu"
                             aria-labelledby="dropdownMenuButtonPickup">
                            <a class="dropdown-item" href="#" onclick="exportPickupDataToCSV()">Export CSV</a>
                            <a class="dropdown-item" href="#" onclick="generateFullPDFReport()">Export PDF</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-category">Last 7 Days</div>
        </div>
        <div class="card-body pb-0">
            <div class="mb-4 mt-2">
                <h1>@Model.PickupsLast7Days</h1>
                <p class="text-muted mb-0">Total Completed</p>
            </div>
            <div class="pull-in sparkline-fix">
                <canvas id="dailyPickupTrendChart"></canvas>
            </div>
        </div>
    </div>             
                <div class="card card-round">
                    <div class="card-body pb-0">
                        <div class="h1 fw-bold float-end text-primary"></div>  
                        <h2 class="mb-2">@Model.BinsScheduledToday.Count()</h2>
                        <p class="text-muted">Today Pickup</p>
                        <div class="pull-in sparkline-fix">
                            <div id="lineChart"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card card-round">
                    <div class="card-header">
                        <div class="card-head-row card-tools-still-right">
                            <h4 class="card-title">Trucks and Bins Tracking</h4>
                            <div class="card-tools">
                                <button class="btn btn-icon btn-link btn-primary btn-xs">
                                    <span class="fa fa-angle-down"></span>
                                </button>
                                <button class="btn btn-icon btn-link btn-primary btn-xs btn-refresh-card">
                                    <span class="fa fa-sync-alt"></span>
                                </button>
                                <button class="btn btn-icon btn-link btn-primary btn-xs">
                                    <span class="fa fa-times"></span>
                                </button>
                            </div>
                        </div>
                        <p class="card-category">
                            Map of the distribution of bins
                        </p>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="table-scroll-container">
                                    <table id="binsTable" class="table table-hover table-sales">
                                        <thead>
                                            <tr>
                                                <th class="sortable-header" data-column="binno">Bin Number</th>
                                                <th class="sortable-header" data-column="location">Location</th>
                                                <th class="sortable-header" data-column="status">Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var bin in Model.Bins)
                                            {
                                                <tr>
                                                    <td>@bin.BinNo</td>
                                                    <td>@($"{bin.Street}, {bin.PostCode}, {bin.City}, {bin.State}")</td>
                                                    <td>
                                                        <span class="badge bg-@(
                                bin.Status == BinStatus.Active ? "success" :
                                bin.Status == BinStatus.Inactive ? "secondary" :
                                "warning")">
                                                            @bin.Status
                                                        </span>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <!-- Map Section -->
                            <div class="col-md-6">
                                <div class="mapcontainer">
                                    <div id="bin-map"
                                         class="w-100"
                                         style="height: 400px"></div>
                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="card card-round">
                    <div class="card-body">
                        <div class="card-head-row card-tools-still-right">
                            <div class="card-title">Trucks</div>
                            <div class="card-tools">
                                <div class="dropdown">
                                    <button class="btn btn-icon btn-clean me-0"
                                            type="button"
                                            id="dropdownMenuButton"
                                            data-bs-toggle="dropdown"
                                            aria-haspopup="true"
                                            aria-expanded="false">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </button>
                                    <div class="dropdown-menu"
                                         aria-labelledby="dropdownMenuButton">
                                        <a class="dropdown-item" href="#">Action</a>
                                        <a class="dropdown-item" href="#">Another action</a>
                                        <a class="dropdown-item" href="#">Something else here</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-list py-4">
                            @foreach (var truck in Model.Trucks)
                            {
                                <div class="item-list">
                                    <div class="avatar">
                                        <span class="avatar-title rounded-circle border border-white bg-primary">
                                            @truck.TruckNo.Substring(0, 1)
                                        </span>
                                    </div>
                                    <div class="info-user ms-3">
                                        <div class="username">Number Plate : @truck.TruckNo</div>
                                        <div class="status">Driver : @truck.DriverName</div>
                                    </div>
                                    <button class="btn btn-icon btn-link op-8 me-1">
                                        <i class="far fa-envelope"></i>
                                    </button>
                                    <button class="btn btn-icon btn-link btn-danger op-8">
                                        <i class="fas fa-ban"></i>
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card card-round">
                    <div class="card-header">
                        <div class="card-head-row card-tools-still-right">
                            <div class="card-title">Recent Pickup History</div>
                            <div class="card-tools">
                                <div class="dropdown">
                                    <button class="btn btn-icon btn-clean me-0"
                                            type="button"
                                            id="dropdownMenuButton"
                                            data-bs-toggle="dropdown"
                                            aria-haspopup="true"
                                            aria-expanded="false">
                                        <i class="fas fa-ellipsis-h"></i>
                                    </button>
                                    <div class="dropdown-menu"
                                         aria-labelledby="dropdownMenuButton">
                                        <a class="dropdown-item" href="#">Action</a>
                                        <a class="dropdown-item" href="#">Another action</a>
                                        <a class="dropdown-item" href="#">Something else here</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <!-- Projects table -->
                            <table class="table align-items-center mb-0">
                                <thead class="thead-light">
                                    <tr>
                                        <th scope="col">Bins Number</th>
                                        <th scope="col" class="text-end">Status</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.BinsScheduledToday != null && Model.BinsScheduledToday.Any())
                                    {
                                        foreach (var bin in Model.BinsScheduledToday)
                                        {
                                            var todaysSchedule = bin.Schedules
                                            .Where(s => s.ScheduledDateTime.Date == DateTime.Today)
                                            .OrderByDescending(s => s.ScheduledDateTime)
                                            .FirstOrDefault();

                                            <tr>
                                                <td>
                                                    <button class="btn btn-icon btn-round btn-default btn-sm me-2">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                    @bin.BinNo
                                                </td>
                                                <td class="text-end">
                                                    @{
                                                        string badgeClass;
                                                        string statusText;

                                                        if (todaysSchedule != null)
                                                        {
                                                            switch (todaysSchedule.Status)
                                                            {
                                                                case ScheduleStatus.Scheduled:
                                                                    badgeClass = "badge-info";
                                                                    statusText = "Scheduled";
                                                                    break;
                                                                case ScheduleStatus.Completed:
                                                                    badgeClass = "badge-success";
                                                                    statusText = "Completed";
                                                                    break;
                                                                case ScheduleStatus.Missed:
                                                                    badgeClass = "badge-danger";
                                                                    statusText = "Missed";
                                                                    break;
                                                                case ScheduleStatus.Reassigned:
                                                                    badgeClass = "badge-warning";
                                                                    statusText = "Reassigned";
                                                                    break;
                                                                default:
                                                                    badgeClass = "badge-secondary";
                                                                    statusText = "Unknown";
                                                                    break;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            badgeClass = "badge-light";
                                                            statusText = "No Schedule Today";
                                                        }
                                                    }
                                                    <span class="badge @badgeClass">@statusText</span>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="2" class="text-center">No bins scheduled for today.</td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*Template*@


@*///////////////////////////////( SCRIPT SECTION )////////////////////////////////////////*@

@* MAP *@

@section Scripts {

    <script src="~/assets/js/plugin/jsvectormap/jsvectormap.min.js"></script>
    <script src="~/assets/js/plugin/jsvectormap/world.js"></script>

    <!-- Initialize map -->
    <script>
        var map = L.map('bin-map').setView([1.5594, 103.6371], 15);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',  {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        @foreach (var bin in Model.Bins)
        {
            <text>
                    L.marker([@bin.Latitude, @bin.Longitude]).addTo(map)
                        .bindPopup("<b>@bin.BinNo</b><br>@($"{bin.Street}, {bin.City}")");
            </text>
        }
    </script>

     <!-- PDF Script -->
    <script>
        async function generateFullPDFReport() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF("p", "pt", "a4");

            const selectedStatus = document.getElementById("statusFilter").value;
            const startDate = document.getElementById("startDate").value;
            const endDate = document.getElementById("endDate").value;

            const start = startDate ? new Date(startDate) : null;
            const end = endDate ? new Date(endDate) : null;

            // Summary Section
            doc.setFontSize(18);
            doc.text("Dashboard Summary", 50, 50);
            doc.setFontSize(12);
            doc.text(`Total Bins: @Model.TotalBins`, 50, 70);
            doc.text(`Active Bins: @Model.ActiveBins`, 50, 90);
            doc.text(`Total Trucks: @Model.TotalTrucks`, 50, 110);
            doc.text(`Trucks Under Maintenance: @Model.TrucksUnderMaintenance`, 50, 130);

            // Draw chart image
            const chartCanvas = await html2canvas(document.getElementById("statisticsChart"), {
                scale: 2,
                logging: false
            });

            const imgData = chartCanvas.toDataURL("image/png");
            doc.addImage(imgData, "PNG", 50, 160, 500, 200);

            let yPosition = 380;

            // Table Header
            doc.setDrawColor(100, 100, 100);
            doc.setFillColor(245, 245, 245);
            doc.rect(50, yPosition, 500, 20, 'F');
            doc.setTextColor(0, 0, 0);
            doc.setFontSize(10);
            doc.text("Bin Number", 60, yPosition + 15);
            doc.text("Location", 160, yPosition + 15);
            doc.text("Status", 400, yPosition + 15);
            yPosition += 20;

            const tableRows = document.querySelectorAll("#binsTable tbody tr");

            tableRows.forEach(row => {
                const cells = row.querySelectorAll("td");
                const binNo = cells[0]?.innerText.trim();
                const location = cells[1]?.innerText.trim();
                const status = cells[2]?.innerText.trim();

                if (!binNo || !location || !status) return;
                if (selectedStatus && status !== selectedStatus) return;

                doc.setFontSize(10);
                doc.text(binNo, 60, yPosition);
                doc.text(location, 160, yPosition, { maxWidth: 220, align: "left" });
                doc.text(status, 400, yPosition);
                yPosition += 20;

                if (yPosition > 750) {
                    doc.addPage();
                    yPosition = 40;
                    doc.rect(50, 20, 500, 20, 'F');
                    doc.setTextColor(0, 0, 0);
                    doc.setFontSize(10);
                    doc.text("Bin Number", 60, 35);
                    doc.text("Location", 160, 35);
                    doc.text("Status", 400, 35);
                    yPosition = 60;
                }
            });

            doc.save("Kutip-Smart_Report.pdf");
        }
    </script>

    <!-- ChartJS -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        let chartInstance = null;

        function updateChart() {
            const startDate = document.getElementById("startDate").value;
            const endDate = document.getElementById("endDate").value;

            const ctx = document.getElementById('statisticsChart').getContext('2d');

            // Destroy previous chart if exists
        if (chartInstance) {
            chartInstance.destroy();
        }

        // Convert input dates to JS Date objects
        const start = startDate ? new Date(startDate) : new Date(2023, 0, 1); // fallback
        const end = endDate ? new Date(endDate) : new Date(2023, 11, 31);

        // Get data from model (Razor-rendered)
        const binData = [@string.Join(",", Model.MonthlyCompletedPickups)];
        const truckData = [@string.Join(",", Model.MonthlyTrucksUsedForPickups)];
        const labels = [@Html.Raw(string.Join(", ", Model.MonthLabels.Select(m => $"'{m}'")))];

        // Filter data based on selected date range
        const filteredBinData = binData.map((val, i) => {
            const month = i + 1;
            const binDate = new Date(2023, month - 1, 15);
            return (binDate >= start && binDate <= end) ? val : 0;
        });

        const filteredTruckData = truckData.map((val, i) => {
            const month = i + 1;
            const truckDate = new Date(2023, month - 1, 15);
            return (truckDate >= start && truckDate <= end) ? val : 0;
        });

            // Create chart
            chartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Bins Collected',
                        backgroundColor: '#4a90e2',
                        borderColor: '#4a90e2',
                        borderWidth: 1,
                        data: filteredBinData
                    }, {
                        label: 'Trucks Used',
                        backgroundColor: '#f67019',
                        borderColor: '#f67019',
                        borderWidth: 1,
                        data: filteredTruckData
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' },
                        title: { display: true, text: 'Monthly Pickup Statistics' }
                    }
                }
            });
        }

             // Call updateChart when page loads or filters change
        window.addEventListener("load", updateChart);
        document.getElementById("startDate")?.addEventListener("change", updateChart);
        document.getElementById("endDate")?.addEventListener("change", updateChart);

    </script>

    @*<script>    
    // Sparkline for Today Pickup
            const lineCtx = document.getElementById('lineChart').getContext('2d');
            new Chart(lineCtx, {
                type: 'line',
                data: {
                    labels: [1, 2, 3, 4, 5, 6, 7],
                    datasets: [{
                        label: 'Pickups',
                        data: [3, 5, 2, 6, 4, 7, 5],
                        borderColor: "#4caf50",
                        fill: false,
                        pointRadius: 0,
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: { display: false },
                        y: { display: false }
                    },
                    plugins: { legend: false }
                }
            });
        </script>*@

<script>
    const dailyCtx = document.getElementById('dailyPickupTrendChart').getContext('2d');
    new Chart(dailyCtx, {
        type: 'line',
        data: {
            labels: [@Html.Raw(string.Join(", ", Model.DailyLabels.Select(d => $"'{d}'")))],
        datasets:
        [{
        label: 'Completed Pickups',
            data: [@string.Join(",", Model.DailyPickupCounts)],
            borderColor: "#fff",
            fill: true,
            backgroundColor: "rgba(255, 255, 255, 0.2)",
            pointRadius: 0,
            borderWidth: 2
        }]
        },
        options: {
        responsive: true,
        scales: {
            x: {
                display: true,
                ticks: {
                    color: '#ccc'
                }
},
            y:
{
beginAtZero: true,
                display: false
            }
        },
        plugins:
{
legend: false,
            tooltip:
    {
    mode: 'index',
                intersect: false,
                callbacks:
        {
        label: function(context) {
            return context.parsed.y + " pickups";
        }
        }
    }
}
        }
    });
</script>
}




@*///////////////////////////////( SCRIPT SECTION )////////////////////////////////////////*@